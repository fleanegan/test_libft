#include <criterion/criterion.h>
#include <unistd.h>
#include "../src/bowling.h"

Test(test_bowling, cheater) {
	init();
	for (int turns = 0; turns < 22; turns++)
		roll(1);

	int result = score();

	cr_assert_eq(result, -1);
}

Test(test_bowling, weak_game) {
	init();
	for (int turns = 0; turns < 20; turns++)
		roll(0);

	int result = score();

	cr_assert_eq(result, 0);
}

Test(test_bowling, only_ones) {
	init();
	for (int turns = 0; turns < 20; turns++)
		roll(1);

	int result = score();

	cr_assert_eq(result, 20);
}

Test(test_bowling, five_pins_at_each_turn)
{
	init();
	roll(5);
	roll(5);
	for (int turns = 0; turns < 18; turns++)
		roll(1);

	int result = score();

	cr_assert_eq(result, 29, " but returned was %d", result);
}

Test(test_bowling, spare_at_the_end)
{
	init();
	for (int turns = 0; turns < 19; turns++)
		roll(1);
	roll(9);
	roll(1);

	int result = score();

	cr_assert_eq(result, 30, " but returned was %d", result);
}

 Test(test_bowling, strike_on_first_frame)
 {
 	init();
 	roll(10);
 	for (int turns = 0; turns < 18; turns++)
 		roll(1);

 	int result = score();

 	cr_assert_eq(result, 30, " but returned was %d", result);
 }

Test(test_bowling, strike_on_first_and_second_frame)
{
	init();
	roll(10);
	roll(10);
	for (int turns = 0; turns < 16; turns++)
		roll(1);

	int result = score();

	cr_assert_eq(result, 49, " but returned was %d", result);
}

// add test for strike and spare at the end
// add test to work for two strikes or at even roll_count